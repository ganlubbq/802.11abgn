
// eiTemplateView.cpp : CeiTemplateView 类的实现
//

#include "stdafx.h"
// SHARED_HANDLERS 可以在实现预览、缩略图和搜索筛选器句柄的
// ATL 项目中进行定义，并允许与该项目共享文档代码。
#ifndef SHARED_HANDLERS
#include "eiTemplate.h"
#endif

#include "eiTemplateDoc.h"
#include "eiTemplateView.h"
#include "MySplitterWnd.h"
#include "MainFrm.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CeiTemplateView

IMPLEMENT_DYNCREATE(CeiTemplateView, CView)

BEGIN_MESSAGE_MAP(CeiTemplateView, CView)
	ON_WM_SIZE()
	ON_WM_SIZING()
END_MESSAGE_MAP()

// CeiTemplateView 构造/析构

CeiTemplateView::CeiTemplateView()
{
	// TODO: 在此处添加构造代码

}

CeiTemplateView::~CeiTemplateView()
{
}

BOOL CeiTemplateView::PreCreateWindow(CREATESTRUCT& cs)
{
	// TODO: 在此处通过修改
	//  CREATESTRUCT cs 来修改窗口类或样式

	return CView::PreCreateWindow(cs);
}

// CeiTemplateView 绘制

void CeiTemplateView::OnDraw(CDC* /*pDC*/)
{
	CeiTemplateDoc* pDoc = GetDocument();
	ASSERT_VALID(pDoc);
	if (!pDoc)
		return;

	// TODO: 在此处为本机数据添加绘制代码
}


// CeiTemplateView 诊断

#ifdef _DEBUG
void CeiTemplateView::AssertValid() const
{
	CView::AssertValid();
}

void CeiTemplateView::Dump(CDumpContext& dc) const
{
	CView::Dump(dc);
}

CeiTemplateDoc* CeiTemplateView::GetDocument() const // 非调试版本是内联的
{
	ASSERT(m_pDocument->IsKindOf(RUNTIME_CLASS(CeiTemplateDoc)));
	return (CeiTemplateDoc*)m_pDocument;
}
#endif //_DEBUG


// CeiTemplateView 消息处理程序


void CeiTemplateView::OnSize(UINT nType, int cx, int cy)
{
	CView::OnSize(nType, cx, cy);

	// TODO: 在此处添加消息处理程序代码
	//MessageBox("size！");
}


void CeiTemplateView::OnSizing(UINT fwSide, LPRECT pRect)
{
	CView::OnSizing(fwSide, pRect);

	// TODO: 在此处添加消息处理程序代码
	//MessageBox("sizing！");
}
